// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using feicount.Data;

#nullable disable

namespace feicount.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240207114006_AddedRecipientsToExpenses")]
    partial class AddedRecipientsToExpenses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExpenseUser", b =>
                {
                    b.Property<int>("ExpensesId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipientsId")
                        .HasColumnType("integer");

                    b.HasKey("ExpensesId", "RecipientsId");

                    b.HasIndex("RecipientsId");

                    b.ToTable("ExpenseUser");
                });

            modelBuilder.Entity("FeicountUser", b =>
                {
                    b.Property<int>("FeicountsId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("FeicountsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("FeicountUser");
                });

            modelBuilder.Entity("feicount.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SpenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FeicountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SpenderId");

                    b.HasIndex("FeicountId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("feicount.Models.Feicount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<int?>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Feicounts");
                });

            modelBuilder.Entity("feicount.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExpenseUser", b =>
                {
                    b.HasOne("feicount.Models.Expense", null)
                        .WithMany()
                        .HasForeignKey("ExpensesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("feicount.Models.User", null)
                        .WithMany()
                        .HasForeignKey("RecipientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeicountUser", b =>
                {
                    b.HasOne("feicount.Models.Feicount", null)
                        .WithMany()
                        .HasForeignKey("FeicountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("feicount.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("feicount.Models.Expense", b =>
                {
                    b.HasOne("feicount.Models.User", "Spender")
                        .WithMany()
                        .HasForeignKey("SpenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("feicount.Models.Feicount", "Feicount")
                        .WithMany("Expenses")
                        .HasForeignKey("FeicountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spender");

                    b.Navigation("Feicount");
                });

            modelBuilder.Entity("feicount.Models.Feicount", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
